2:38 μμ 4/9/2022

--EXERCISE 1: String Patterns

--PROBLEM 1. Retrieve all employees whose address is in Elgin,IL.

SELECT CONCAT(CONCAT(F_NAME,' '), L_NAME) as FULL_NAME  
FROM EMPLOYEES
WHERE ADDRESS LIKE'%Elgin,IL%';

--PROBLEM 2. Retrieve all employees who were born during the 1970's.

SELECT CONCAT(CONCAT(F_NAME,' '), L_NAME) 
AS FULL_NAME, 
B_DATE AS BIRTHDAY 
FROM EMPLOYEES
WHERE B_DATE LIKE '197%';

--PROBLEM 3. Retrieve all employees in department 5 whose salary is between 60000 and 70000.

SELECT 
CONCAT(CONCAT(F_NAME,' '), L_NAME) AS FULL_NAME, 
CONCAT('$ ',SALARY) AS SALARIES, 
DEP_ID 
FROM EMPLOYEES
WHERE (SALARY BETWEEN 60000 AND 70000) AND DEP_ID = 5;


--EXERCISE 2: Sorting

--PROBLEM 1. Retrieve a list of employees ordered by department ID.

SELECT 
CONCAT(CONCAT(F_NAME,' '), L_NAME) AS FULL_NAME,
DEP_ID
FROM EMPLOYEES
ORDER BY DEP_ID ASC;


--PROBLEM 2. Retrieve a list of employees ordered in descending order by department ID 
--           and within each department ordered alphabetically in descending order by last name.

SELECT 
CONCAT(CONCAT(F_NAME,' '), L_NAME) AS FULL_NAME,
DEP_ID
FROM EMPLOYEES
ORDER BY DEP_ID DESC, L_NAME DESC;

--PROBLEM 3 (Optional):
--In SQL problem 2 (Exercise 2 Problem 2), use department name instead of department ID. 
--Retrieve a list of employees ordered by department name, and within each department
--ordered alphabetically in descending order by last name.

SELECT 
CONCAT(CONCAT(F_NAME,' '), L_NAME) AS FULL_NAME,
DEP_ID, DEPARTMENTS.DEP_NAME
FROM EMPLOYEES, DEPARTMENTS
WHERE EMPLOYEES.DEP_ID = DEPARTMENTS.DEPT_ID_DEP
ORDER BY DEPARTMENTS.DEP_NAME ASC, EMPLOYEES.L_NAME DESC;

--EXERCISE 3: Grouping

--PROBLEM 1. For each department ID retrieve the number of employees in the department.

SELECT DEP_ID, COUNT(*) AS NUMBER_OF_EMPLOYEES
FROM EMPLOYEES
GROUP BY DEP_ID;

--PROBLEM 2. For each department retrieve the number of employees in the department, 
--and the average employee salary in the department..

SELECT DEP_ID, COUNT(*) AS N_OF_EMPLOYEES, AVG(SALARY) AS AVERAGE_SALARY
FROM EMPLOYEES, DEPARTMENTS
GROUP BY DEP_ID;

--PROBLEM 3. Label the computed columns in the result set of SQL problem 2 
--(Exercise 3 Problem 2) as NUM_EMPLOYEES and AVG_SALARY.

SELECT DEP_ID, COUNT(*) AS N_OF_EMPLOYEES, AVG(SALARY) AS AVERAGE_SALARY
FROM EMPLOYEES
GROUP BY DEP_ID;

--PROBLEM 4. In SQL problem 3 (Exercise 3 Problem 3), order the result set by Average Salary..

SELECT DEP_ID, COUNT(*) AS N_OF_EMPLOYEES, AVG(SALARY) AS AVERAGE_SALARY
FROM EMPLOYEES
GROUP BY DEP_ID
ORDER BY AVERAGE_SALARY;

--PROBLEM 5. In SQL problem 4 (Exercise 3 Problem 4), limit the result to departments with fewer than 4 employees.

SELECT DEP_ID, COUNT(*) AS N_OF_EMPLOYEES, AVG(SALARY) AS AVERAGE_SALARY
FROM EMPLOYEES
GROUP BY DEP_ID HAVING COUNT(*) < 4
ORDER BY AVERAGE_SALARY;